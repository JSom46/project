{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makin\\\\Documents\\\\GitHub\\\\project\\\\react-app\\\\src\\\\activate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './login.css';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function activateAccount(userData) {\n  const data = fetch('http://localhost:2400/auth/activate', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin',\n    body: JSON.stringify(userData)\n  }).then(data => data.json());\n  return data;\n}\n\nexport default function Activate() {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [code, setCode] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await activateAccount({\n      email,\n      code\n    });\n    errorMessage(response.msg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Aktywacja\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          required: true,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"code\",\n          children: \"Kod\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"code\",\n          id: \"code\",\n          placeholder: \"kod\",\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      children: \"Aktywuj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  function errorMessage(msg) {\n    var element = document.getElementById(\"activateError\");\n    element.style.color = \"red\";\n    element.innerHTML = msg;\n  }\n}\n\n_s(Activate, \"ObSHlQFBm23zvZAG3aOMy1IkbGg=\");\n\n_c = Activate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activate\");","map":{"version":3,"sources":["C:/Users/makin/Documents/GitHub/project/react-app/src/activate.js"],"names":["React","useState","Button","Form","FormGroup","Label","Input","activateAccount","userData","data","fetch","method","headers","credentials","body","JSON","stringify","then","json","Activate","email","setEmail","code","setCode","handleSubmit","e","preventDefault","response","errorMessage","msg","target","value","element","document","getElementById","style","color","innerHTML"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './login.css'\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n\r\nasync function activateAccount(userData) {\r\n  const data = fetch('http://localhost:2400/auth/activate', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    credentials: 'same-origin',\r\n    body: JSON.stringify(userData)\r\n  }).then(data => data.json())\r\n  return data;\r\n }\r\n\r\n\r\nexport default function Activate() {\r\n  const [email, setEmail] = useState();\r\n  const [code, setCode] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await activateAccount({\r\n      email,\r\n      code\r\n    });\r\n    errorMessage(response.msg);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n    <h1>Aktywacja</h1>\r\n    <Form onSubmit={handleSubmit}>\r\n    <FormGroup>\r\n      <Label for=\"email\">Email</Label>\r\n      <Input type=\"email\" name=\"email\" id=\"email\" required onChange={e => setEmail(e.target.value)} placeholder=\"email\" />\r\n    </FormGroup>\r\n    <FormGroup>\r\n      <Label for=\"code\">Kod</Label>\r\n      <Input type=\"number\" name=\"code\" id=\"code\" placeholder=\"kod\" onChange={e => setCode(e.target.value)}/>\r\n    </FormGroup>\r\n    </Form>\r\n    <Button color=\"primary\" type='submit'>Aktywuj</Button>\r\n    </div>\r\n  )\r\n  function errorMessage(msg) {\r\n      var element = document.getElementById(\"activateError\");\r\n      element.style.color = \"red\";\r\n      element.innerHTML = msg;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}