{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makin\\\\Desktop\\\\react-app\\\\src\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function registerUser(credentials) {\n  if (credentials.username === \"k123\" && credentials.password === \"k123\") return \"SUCCESS\";else return \"FAILURE\"; // return fetch('http://localhost:8080/login', {\n  //   method: 'POST',\n  //   headers: {\n  //     'Content-Type': 'application/json'\n  //   },\n  //   body: JSON.stringify(credentials)\n  // })\n  //   .then(data => data.json())\n}\n\nexport default function Register() {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [passwordRepeat, setPasswordRepeat] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== passwordRepeat) {\n      errorMessage(\"PASSWORDS_NOT_THE_SAME\");\n      return -1;\n    }\n\n    const response = await registerUser({\n      username,\n      password\n    });\n\n    if (response === \"SUCCESS\") {\n      errorMessage(\"SUCCESS\");\n      await delay(5000);\n      window.location.assign(\"/login\");\n    } // setToken(token);\n    // if(token === -1){\n    //     errorMessage();\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rejestracja\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"Login: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Has\\u0142o: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 93\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Powt\\xF3rz has\\u0142o: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"passwordRepeat\",\n        onChange: e => setPasswordRepeat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Zarejestruj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"registerMessage\",\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  function errorMessage(code) {\n    var element = document.getElementById(\"registerMessage\");\n    element.style.color = \"red\";\n\n    switch (code) {\n      case \"PASSWORDS_NOT_THE_SAME\":\n        element.innerHTML = \"Hasła nie są takie same\";\n        break;\n\n      case \"SUCCESS\":\n        {\n          element.style.color = \"green\";\n          element.innerHTML = \"Pomyślnie założono konto\\n\";\n        }\n        break;\n\n      default:\n        element.innerHTML = \"Wystąpił błąd\";\n    }\n  }\n} // Login.propTypes = {\n//     setToken: PropTypes.func.isRequired\n//   }\n\n_s(Register, \"rCpQhEgBnglznegBQvQ+ZPiJkLY=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/makin/Desktop/react-app/src/Register.js"],"names":["React","useState","PropTypes","registerUser","credentials","username","password","Register","setUserName","setPassword","passwordRepeat","setPasswordRepeat","handleSubmit","e","preventDefault","errorMessage","response","delay","window","location","assign","target","value","code","element","document","getElementById","style","color","innerHTML"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './login.css'\r\n\r\nasync function registerUser(credentials) {\r\n    if(credentials.username === \"k123\" && credentials.password === \"k123\") return \"SUCCESS\";\r\n    else return \"FAILURE\";\r\n    // return fetch('http://localhost:8080/login', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json'\r\n    //   },\r\n    //   body: JSON.stringify(credentials)\r\n    // })\r\n    //   .then(data => data.json())\r\n   }\r\n\r\nexport default function Register() {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordRepeat, setPasswordRepeat] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== passwordRepeat){\r\n        errorMessage(\"PASSWORDS_NOT_THE_SAME\");\r\n        return -1;\r\n    }\r\n    const response = await registerUser({\r\n      username,\r\n      password\r\n    });\r\n    if(response === \"SUCCESS\"){\r\n        errorMessage(\"SUCCESS\");\r\n        await delay(5000);\r\n        window.location.assign(\"/login\");\r\n    }\r\n    // setToken(token);\r\n    // if(token === -1){\r\n    //     errorMessage();\r\n    // }\r\n  }\r\n\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Rejestracja</h1>\r\n      <form onSubmit={handleSubmit}>\r\n          <label for=\"username\">Login: </label><br />\r\n          <input type=\"text\" id=\"username\" onChange={e => setUserName(e.target.value)}/><br />\r\n          <label for=\"password\">Hasło: </label><br />\r\n          <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/><br />\r\n          <label for=\"password\">Powtórz hasło: </label><br />\r\n          <input type=\"password\" id=\"passwordRepeat\" onChange={e => setPasswordRepeat(e.target.value)}/><br />\r\n          <button type=\"submit\">Zarejestruj</button>\r\n      </form>\r\n      <p id=\"registerMessage\">&nbsp;</p>\r\n    </div>\r\n  )\r\n  function errorMessage(code) {\r\n      var element = document.getElementById(\"registerMessage\");\r\n      element.style.color = \"red\";\r\n      switch(code){\r\n          case \"PASSWORDS_NOT_THE_SAME\":\r\n          element.innerHTML = \"Hasła nie są takie same\";\r\n          break;\r\n          case \"SUCCESS\":{\r\n              element.style.color = \"green\";\r\n              element.innerHTML = \"Pomyślnie założono konto\\n\";\r\n          }\r\n          break;\r\n          default:\r\n          element.innerHTML = \"Wystąpił błąd\";\r\n      }\r\n  }\r\n}\r\n// Login.propTypes = {\r\n//     setToken: PropTypes.func.isRequired\r\n//   }"]},"metadata":{},"sourceType":"module"}